// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WowArmory.Models.Core.Context;

namespace WowArmory.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.1.21102.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WowArmory.Models.ClassModel", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("classid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("c_color");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("c_icon");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("c_name");

                    b.HasKey("ClassId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("WowArmory.Models.DataModel", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dataid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_class");

                    b.Property<int?>("ContentPhase")
                        .HasColumnType("int")
                        .HasColumnName("d_contentphase");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_icon");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.Property<int>("ItemLevel")
                        .HasColumnType("int")
                        .HasColumnName("d_itemlevel");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_name");

                    b.Property<string>("Quality")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_quality");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("int")
                        .HasColumnName("d_requiredlevel");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int")
                        .HasColumnName("d_sellprice");

                    b.Property<string>("Slot")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_slot");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Subclass")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_subclass");

                    b.Property<string>("UniqueName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("d_uniquename");

                    b.Property<int>("VendorPrice")
                        .HasColumnType("int")
                        .HasColumnName("d_vendorprice");

                    b.HasKey("DataId");

                    b.HasIndex("SourceId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("WowArmory.Models.LevelModel", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("levelid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Level1")
                        .HasColumnType("int")
                        .HasColumnName("level1");

                    b.Property<int?>("Level2")
                        .HasColumnType("int")
                        .HasColumnName("level2");

                    b.HasKey("LevelId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("WowArmory.Models.ProfessionModel", b =>
                {
                    b.Property<int>("ProfessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("professionid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("i_icon");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("p_name");

                    b.HasKey("ProfessionId");

                    b.ToTable("Profession");
                });

            modelBuilder.Entity("WowArmory.Models.QuestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Faction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("q_faction");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("q_name");

                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("questid");

                    b.Property<int?>("SourceModelSourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceModelSourceId");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("WowArmory.Models.SourceModel", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sourceid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("s_category");

                    b.Property<int>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("s_cost");

                    b.Property<string>("Faction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("s_faction");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("s_name");

                    b.HasKey("SourceId");

                    b.ToTable("Source");
                });

            modelBuilder.Entity("WowArmory.Models.SpecModel", b =>
                {
                    b.Property<int>("SpecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("specid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassModelClassId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("s_icon");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("s_name");

                    b.HasKey("SpecId");

                    b.HasIndex("ClassModelClassId");

                    b.ToTable("Spec");
                });

            modelBuilder.Entity("WowArmory.Models.TalentModel", b =>
                {
                    b.Property<int>("TalentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("talentid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("t_name");

                    b.HasKey("TalentId");

                    b.ToTable("Talent");
                });

            modelBuilder.Entity("WowArmory.Models.TooltipModel", b =>
                {
                    b.Property<int>("TooltipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tooltipid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataModelDataId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("t_format");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Label")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("t_label");

                    b.Property<int?>("TalentModelTalentId")
                        .HasColumnType("int");

                    b.HasKey("TooltipId");

                    b.HasIndex("DataModelDataId");

                    b.HasIndex("TalentModelTalentId");

                    b.ToTable("Tooltip");
                });

            modelBuilder.Entity("WowArmory.Models.ZoneModel", b =>
                {
                    b.Property<int>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("zoneid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("z_category");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("z_name");

                    b.Property<string>("Territory")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("z_territory");

                    b.HasKey("ZoneId");

                    b.HasIndex("LevelId");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("WowArmory.Models.DataModel", b =>
                {
                    b.HasOne("WowArmory.Models.SourceModel", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("WowArmory.Models.QuestModel", b =>
                {
                    b.HasOne("WowArmory.Models.SourceModel", null)
                        .WithMany("Quests")
                        .HasForeignKey("SourceModelSourceId");
                });

            modelBuilder.Entity("WowArmory.Models.SpecModel", b =>
                {
                    b.HasOne("WowArmory.Models.ClassModel", null)
                        .WithMany("Spec")
                        .HasForeignKey("ClassModelClassId");
                });

            modelBuilder.Entity("WowArmory.Models.TooltipModel", b =>
                {
                    b.HasOne("WowArmory.Models.DataModel", null)
                        .WithMany("Tooltip")
                        .HasForeignKey("DataModelDataId");

                    b.HasOne("WowArmory.Models.TalentModel", null)
                        .WithMany("ToolTip")
                        .HasForeignKey("TalentModelTalentId");
                });

            modelBuilder.Entity("WowArmory.Models.ZoneModel", b =>
                {
                    b.HasOne("WowArmory.Models.LevelModel", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("WowArmory.Models.ClassModel", b =>
                {
                    b.Navigation("Spec");
                });

            modelBuilder.Entity("WowArmory.Models.DataModel", b =>
                {
                    b.Navigation("Tooltip");
                });

            modelBuilder.Entity("WowArmory.Models.SourceModel", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("WowArmory.Models.TalentModel", b =>
                {
                    b.Navigation("ToolTip");
                });
#pragma warning restore 612, 618
        }
    }
}
